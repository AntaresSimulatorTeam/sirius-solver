CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(PNE)

if(MSVC)
	add_compile_definitions("_CRT_SECURE_NO_WARNINGS")
	set(BUILD_SHARED_LIBS OFF)
endif(MSVC)

SET(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
SET(CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD 1)
MESSAGE("CMAKE_BINARY_DIR : ${CMAKE_BINARY_DIR}")
MESSAGE("CMAKE_SOURCE_DIR : ${CMAKE_SOURCE_DIR}")
 
# SET(CMAKE_CC_COMPILER /logiciels/public/gcc-4.1.0/bin/gcc)

SET(EXECUTABLE_OUTPUT_PATH	${CMAKE_BINARY_DIR})
SET(   LIBRARY_OUTPUT_PATH	${CMAKE_BINARY_DIR})

INCLUDE_DIRECTORIES(. LU PNE SRS)

FILE(GLOB HEADERS LU/*.h ./PNE/*.h ./SRS/*.h)

MESSAGE("-- LU")
FILE(GLOB LU_FILES  LU/*.c LU/*.h)

MESSAGE("-- PNE")
FILE(GLOB PNE_FILES PNE/*.c PNE/*.h)
LIST(REMOVE_ITEM PNE_FILES PNE/spx_standalone.c)

MESSAGE("-- SRS")
FILE(GLOB SRS_FILES SRS/*.c SRS/*.h)
 
ADD_LIBRARY(bib_solveur_static STATIC ${LU_FILES} ${PNE_FILES} ${SRS_FILES})
ADD_LIBRARY(bib_solveur SHARED ${LU_FILES} ${PNE_FILES} ${SRS_FILES})
ADD_EXECUTABLE(TEST_API TEST_API/main.c )

IF(WIN32)
	TARGET_LINK_LIBRARIES(TEST_API bib_solveur_static)
ELSE()
	TARGET_LINK_LIBRARIES(TEST_API bib_solveur_static m)
ENDIF(WIN32) 

set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install")
INSTALL(FILES ${HEADERS} DESTINATION "${CMAKE_BINARY_DIR}/install/includes")
IF (MSVC)
	INSTALL(TARGETS bib_solveur RUNTIME DESTINATION "${CMAKE_BINARY_DIR}/install/lib/Release" CONFIGURATIONS Release)
	INSTALL(TARGETS bib_solveur ARCHIVE DESTINATION "${CMAKE_BINARY_DIR}/install/lib/Release" CONFIGURATIONS Release)
	INSTALL(TARGETS bib_solveur RUNTIME DESTINATION "${CMAKE_BINARY_DIR}/install/lib/Debug" CONFIGURATIONS Debug)
	INSTALL(TARGETS bib_solveur ARCHIVE DESTINATION "${CMAKE_BINARY_DIR}/install/lib/Debug" CONFIGURATIONS Debug)
ELSE()
	INSTALL(TARGETS bib_solveur DESTINATION "${CMAKE_BINARY_DIR}/install/lib/")
ENDIF()
	
#INSTALL(TARGETS bib_solveur PUBLIC_HEADER DESTINATION "${CMAKE_BINARY_DIR}/install/includes")
