CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(PNE)

if(MSVC)
	add_compile_definitions("_CRT_SECURE_NO_WARNINGS")
	set(BUILD_SHARED_LIBS OFF)
	SET(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
	SET(CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD 1)
endif(MSVC)

MESSAGE("CMAKE_BINARY_DIR : ${CMAKE_BINARY_DIR}")
MESSAGE("CMAKE_SOURCE_DIR : ${CMAKE_SOURCE_DIR}")
 
# SET(CMAKE_CC_COMPILER /logiciels/public/gcc-4.1.0/bin/gcc)

SET(EXECUTABLE_OUTPUT_PATH	${CMAKE_BINARY_DIR})
SET(   LIBRARY_OUTPUT_PATH	${CMAKE_BINARY_DIR})

INCLUDE_DIRECTORIES(. LU PNE SRS)

FILE(GLOB HEADERS LU/*.h ./PNE/*.h ./SRS/*.h)

MESSAGE("-- LU")
FILE(GLOB LU_FILES  LU/*.c LU/*.h)

MESSAGE("-- PNE")
FILE(GLOB PNE_FILES PNE/*.c PNE/*.h)
LIST(REMOVE_ITEM PNE_FILES PNE/spx_standalone.c)
LIST(REMOVE_ITEM PNE_FILES PNE/pne_standalone.c)

MESSAGE("-- SRS")
FILE(GLOB SRS_FILES SRS/*.c SRS/*.h)
 
ADD_LIBRARY(bib_solveur_static STATIC ${LU_FILES} ${PNE_FILES} ${SRS_FILES})
ADD_LIBRARY(bib_solveur SHARED ${LU_FILES} ${PNE_FILES} ${SRS_FILES})
ADD_EXECUTABLE(TEST_API TEST_API/main.c )

IF(WIN32)
	TARGET_LINK_LIBRARIES(TEST_API bib_solveur_static)
ELSE()
	TARGET_LINK_LIBRARIES(TEST_API bib_solveur_static m)
ENDIF(WIN32)

SET_TARGET_PROPERTIES(bib_solveur_static PROPERTIES PUBLIC_HEADER "${HEADERS}")
SET_TARGET_PROPERTIES(bib_solveur PROPERTIES PUBLIC_HEADER "${HEADERS}")
#target_include_directories(bib_solveur PUBLIC src/SRS/ src/LU/ src/PNE/)
target_include_directories(bib_solveur PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/SRS/> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/LU/> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/PNE/>)

#set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install")
INSTALL(TARGETS bib_solveur
	EXPORT bib_solveur
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib
	RUNTIME DESTINATION bin
	INCLUDES DESTINATION include
)

install(EXPORT bib_solveur
	FILE bib_solveurConfig.cmake
	DESTINATION cmake
)



