# Decommenter pour compiler sur la 32 bits 
CC = gcc
#PURIFY = /logiciels/purify5/releases/purify.i386_linux2.7.0.1/purify -cache-dir=CACHE_PURIFY -search-thread-stacks 
PURIFY = /logiciels64/rational/releases/purify.i386_linux2.7.0.1.0-004/purify -cache-dir=CACHE_PURIFY -search-thread-stacks 
# pour utiliser purify mettre $(PURIFY) juste avant $(CC)
#
# initialisation des macros
#
DIR_INCLUDE_1 = ./BRANCH_AND_BOUND 
DIR_INCLUDE_2 = ./POINT_INTERIEUR 
DIR_INCLUDE_3 = ./SIMPLEXE 
DIR_INCLUDE_4 = ./PRESOLVE 
#
bib_solveur = bib_solveur.a  
bib_btf = ./SIMPLEXE/LU/BTF/BTF/Lib/libbtf.a  
bib_cs = ./SIMPLEXE/LU/CSparse/Lib/libcsparse.a  
lib_tcmalloc = /local/bin/lib  
bib_tcmalloc = /local/bin/lib/libtcmalloc_debug.a  
source_de_exe = pne_standalone.c
exe_du_prog   = PNE_STANDALONE.exe 
#
# declaration des objets a maintenir
#
all : $(exe_du_prog)
#
# edition de liens eventuelle  
#    
$(exe_du_prog):  $(bib_solveur) $(biblu1) $(biblu2)  
	echo " "
	echo " edition de liens "
	echo " "
	$(CC) -msse2 -pg -g --no-inline -o $(exe_du_prog) $(source_de_exe) -I$(DIR_INCLUDE_1) -I$(DIR_INCLUDE_2) -I$(DIR_INCLUDE_3) -I$(DIR_INCLUDE_4) -lrt -lm $(bib_solveur) $(bib_solveur) $(bib_cs) $(bib_btf)               
	\rm -f *.o

